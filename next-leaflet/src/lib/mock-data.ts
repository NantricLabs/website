import type { Job } from "@/lib/types"

export const mockStatistics = {
  totalRequests: 1458923,
  requestsChange: 12.5,
  successRate: 87.3,
  avgResponseTime: 245,
  responseTimeChange: -5.2,
  activeProviders: 8,
  topProviders: [
    { name: "Provider A", value: 523456 },
    { name: "Provider B", value: 342198 },
    { name: "Provider C", value: 289745 },
    { name: "Provider D", value: 187654 },
    { name: "Provider E", value: 115870 },
  ],
  requestsOverTime: [
    { label: "00:00", value: 1245 },
    { label: "02:00", value: 987 },
    { label: "04:00", value: 764 },
    { label: "06:00", value: 1432 },
    { label: "08:00", value: 2543 },
    { label: "10:00", value: 3210 },
    { label: "12:00", value: 2987 },
    { label: "14:00", value: 3456 },
    { label: "16:00", value: 3245 },
    { label: "18:00", value: 2876 },
    { label: "20:00", value: 2345 },
    { label: "22:00", value: 1876 },
  ],
  statusCodeDistribution: [
    { name: "200", value: 1271543 },
    { name: "403", value: 87654 },
    { name: "404", value: 32456 },
    { name: "429", value: 45678 },
    { name: "500", value: 21592 },
  ],
  geoDistribution: [
    { name: "United States", percentage: 35 },
    { name: "Germany", percentage: 18 },
    { name: "United Kingdom", percentage: 12 },
    { name: "Japan", percentage: 10 },
    { name: "Canada", percentage: 8 },
    { name: "Others", percentage: 17 },
  ],
  proxyTypePerformance: [
    { name: "HTTP", successRate: 92, avgResponseTime: 210, requestCount: 654321 },
    { name: "SOCKS5", successRate: 88, avgResponseTime: 245, requestCount: 432198 },
    { name: "Residential", successRate: 79, avgResponseTime: 320, requestCount: 372404 },
  ],
}

export const mockJobs: Job[] = [
  {
    JobName: "product-scraper-amazon",
    ProviderName: "Provider A",
    Proxy: "proxy-a.example.com:8080",
    Pool: "US-Pool",
    Type: "HTTP",
    Status: "Running",
    Threads: 10,
    URL: "https://amazon.com",
    LastHeartbeat: "2 minutes ago",
  },
  {
    JobName: "price-monitor-ebay",
    ProviderName: "Provider B",
    Proxy: "proxy-b.example.com:9090",
    Pool: "EU-Pool",
    Type: "SOCKS5",
    Status: "Running",
    Threads: 5,
    URL: "https://ebay.com",
    LastHeartbeat: "5 minutes ago",
  },
  {
    JobName: "inventory-check-walmart",
    ProviderName: "Provider C",
    Proxy: "proxy-c.example.com:8888",
    Pool: "US-Pool",
    Type: "Residential",
    Status: "Stopped",
    Threads: 8,
    URL: "https://walmart.com",
    LastHeartbeat: "2 hours ago",
  },
  {
    JobName: "review-collector-bestbuy",
    ProviderName: "Provider A",
    Proxy: "proxy-a.example.com:8080",
    Pool: "US-Pool",
    Type: "HTTP",
    Status: "Failed",
    Threads: 3,
    URL: "https://bestbuy.com",
    LastHeartbeat: "1 hour ago",
  },
  {
    JobName: "stock-monitor-target",
    ProviderName: "Provider D",
    Proxy: "proxy-d.example.com:7070",
    Pool: "US-Pool",
    Type: "HTTP",
    Status: "Pending",
    Threads: 6,
    URL: "https://target.com",
    LastHeartbeat: "Never",
  },
  {
    JobName: "price-tracker-aliexpress",
    ProviderName: "Provider B",
    Proxy: "proxy-b.example.com:9090",
    Pool: "ASIA-Pool",
    Type: "SOCKS5",
    Status: "Running",
    Threads: 12,
    URL: "https://aliexpress.com",
    LastHeartbeat: "1 minute ago",
  },
  {
    JobName: "product-monitor-newegg",
    ProviderName: "Provider E",
    Proxy: "proxy-e.example.com:6060",
    Pool: "US-Pool",
    Type: "Residential",
    Status: "Running",
    Threads: 4,
    URL: "https://newegg.com",
    LastHeartbeat: "3 minutes ago",
  },
]

export const mockHeartbeats = [
  {
    timestamp: "2023-06-15 14:32:45",
    status: "OK",
    message: "Job running normally",
  },
  {
    timestamp: "2023-06-15 14:31:45",
    status: "OK",
    message: "Processed 245 requests",
  },
  {
    timestamp: "2023-06-15 14:30:45",
    status: "OK",
    message: "Processed 238 requests",
  },
  {
    timestamp: "2023-06-15 14:29:45",
    status: "Error",
    message: "Rate limit exceeded, backing off",
  },
  {
    timestamp: "2023-06-15 14:28:45",
    status: "OK",
    message: "Processed 252 requests",
  },
  {
    timestamp: "2023-06-15 14:27:45",
    status: "OK",
    message: "Processed 241 requests",
  },
  {
    timestamp: "2023-06-15 14:26:45",
    status: "OK",
    message: "Job started",
  },
]

export const mockJobMetrics = {
  successRate: 92.5,
  avgResponseTime: 215,
  totalRequests: 45678,
  performanceOverTime: [
    { label: "14:00", value: 210 },
    { label: "14:05", value: 215 },
    { label: "14:10", value: 205 },
    { label: "14:15", value: 220 },
    { label: "14:20", value: 230 },
    { label: "14:25", value: 225 },
    { label: "14:30", value: 215 },
  ],
  statusCodes: [
    { code: 200, count: 42251, percentage: 92.5 },
    { code: 403, count: 1825, percentage: 4.0 },
    { code: 429, count: 912, percentage: 2.0 },
    { code: 500, count: 456, percentage: 1.0 },
    { code: 502, count: 234, percentage: 0.5 },
  ],
}

